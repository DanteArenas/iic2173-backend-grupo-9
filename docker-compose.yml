
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: properties-db
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # MQTT Listener Service
  listener:
    build: ./src/listener
    container_name: mqtt-listener
    restart: unless-stopped
    environment:
      - NODE_ENV=development
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./src/listener:/app
      - /app/node_modules

  # Web Server Service
  web_server:
    build: ./src/web_server
    container_name: web-server
    restart: unless-stopped
    environment:
      - NODE_ENV=development
    env_file:
      - .env
    ports:
      - "${APP_PORT}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./src/web_server:/app
      - /app/node_modules

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
